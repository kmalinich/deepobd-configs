<?xml version="1.0" encoding="utf-8" ?>
<fragment xmlns="http://www.holeschak.de/BmwDeepObd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.holeschak.de/BmwDeepObd../BmwDeepObd.xsd">
	<page name="tab_adapter_config2">
		<display name="label_ignition" result="0_RESPONSE" />
		<display name="label_block_size" result="1_RESPONSE" format="3L" />
		<display name="label_sep_time" result="2_RESPONSE" format="3L" />
		<display name="label_can_mode" result="3_RESPONSE" />

		<strings>
			<string name="tab_adapter_config2">Intf custom</string>
			<string name="label_ignition">Ignition:</string>
			<string name="label_block_size">CAN block size:</string>
			<string name="label_sep_time">CAN separation time [ms]:</string>
			<string name="label_can_mode">CAN operation mode:</string>
			<string name="button_adapter_config_block_size">CAN block size + 2</string>
			<string name="button_adapter_config_sep_time0">CAN separation time 0 ms</string>
			<string name="button_adapter_config_sep_time1">CAN separation time 1 ms</string>
			<string name="button_adapter_config_can_500">500 kbit/s D-CAN</string>
			<string name="button_adapter_config_can_100">100 kbit/s K-CAN</string>
			<string name="button_adapter_config_can_off">CAN off</string>
			<string name="button_adapter_config_can_disp_500">500 kbit/s</string>
			<string name="button_adapter_config_can_disp_100">100 kbit/s</string>
			<string name="button_adapter_config_can_disp_off">CAN off</string>
			<string name="adapter_ignition_off">Off</string>
			<string name="adapter_ignition_on">On</string>
		</strings>

		<jobs sgbd="adapter_prg" />
		<code show_warnings="true">
<![CDATA[
class PageClass {
	private class EdiabasJob {
		private string jobName;
		private string jobArgs;
		private string resultRequests;

		public EdiabasJob(string jobName, string jobArgs, string resultRequests) {
			this.jobName = jobName;
			this.jobArgs = jobArgs;
			this.resultRequests = resultRequests;
		}

		public string JobName {
			get {
				return jobName;
			}
		}

		public string JobArgs {
			get {
				return jobArgs;
			}
		}

		public string ResultRequests {
			get {
				return resultRequests;
			}
		}
	}

	static private readonly EdiabasJob[] jobArray = {
		new EdiabasJob("ADAPTER_CMD", "0xFE;0xFE", string.Empty),
		new EdiabasJob("ADAPTER_CMD", "0x80;0x00", string.Empty),
		new EdiabasJob("ADAPTER_CMD", "0x81;0x00", string.Empty),
		new EdiabasJob("ADAPTER_CMD", "0x82;0x00", string.Empty),
	};

	private Button buttonBlockSize;
	private Button buttonSepTime0;
	private Button buttonSepTime1;
	private Button buttonCan500;
	private Button buttonCan100;
	private Button buttonCanOff;

	private int adapterCmd = -1;
	private int adapterValue;
	private int blockSize = 0;

	public void CreateLayout(ActivityMain activity, JobReader.PageInfo pageInfo, LinearLayout pageLayout) {
		LinearLayout buttonLayout = new LinearLayout(activity);
		buttonLayout.Orientation = Orientation.Vertical;

		LinearLayout.LayoutParams buttonLayoutParams = new LinearLayout.LayoutParams(
				ViewGroup.LayoutParams.MatchParent,
				ViewGroup.LayoutParams.WrapContent);
		buttonLayoutParams.Weight = 1;

		buttonBlockSize = new Button(activity);
		buttonBlockSize.Text = string.Format("{0}: {1}", ActivityMain.GetPageString(pageInfo, "button_adapter_config_block_size"), blockSize);
		buttonBlockSize.Click += delegate
		{
			blockSize += 2;
			if (blockSize > 8)
			{
				blockSize = 0;
			}
			adapterCmd = 0x00;
			adapterValue = blockSize;
			buttonBlockSize.Text = string.Format("{0}: {1}", ActivityMain.GetPageString(pageInfo, "button_adapter_config_block_size"), blockSize);
		};
		buttonLayout.AddView(buttonBlockSize, buttonLayoutParams);

		buttonSepTime0 = new Button(activity);
		buttonSepTime0.Text = ActivityMain.GetPageString(pageInfo, "button_adapter_config_sep_time0");
		buttonSepTime0.Click += delegate
		{
			adapterCmd = 0x01;
			adapterValue = 0x00;
		};
		buttonLayout.AddView(buttonSepTime0, buttonLayoutParams);

		buttonSepTime1 = new Button(activity);
		buttonSepTime1.Text = ActivityMain.GetPageString(pageInfo, "button_adapter_config_sep_time1");
		buttonSepTime1.Click += delegate
		{
			adapterCmd = 0x01;
			adapterValue = 0x01;
		};
		buttonLayout.AddView(buttonSepTime1, buttonLayoutParams);

		buttonCan500 = new Button(activity);
		buttonCan500.Text = ActivityMain.GetPageString(pageInfo, "button_adapter_config_can_500");
		buttonCan500.Click += delegate
		{
			adapterCmd = 0x02;
			adapterValue = 0x01;
		};
		buttonLayout.AddView(buttonCan500, buttonLayoutParams);

		buttonCan100 = new Button(activity);
		buttonCan100.Text = ActivityMain.GetPageString(pageInfo, "button_adapter_config_can_100");
		buttonCan100.Click += delegate
		{
			adapterCmd = 0x02;
			adapterValue = 0x09;
		};
		buttonLayout.AddView(buttonCan100, buttonLayoutParams);

		buttonCanOff = new Button(activity);
		buttonCanOff.Text = ActivityMain.GetPageString(pageInfo, "button_adapter_config_can_off");
		buttonCanOff.Click += delegate
		{
			adapterCmd = 0x02;
			adapterValue = 0x00;
		};
		buttonLayout.AddView(buttonCanOff, buttonLayoutParams);

		LinearLayout.LayoutParams layoutParams = new LinearLayout.LayoutParams(
				ViewGroup.LayoutParams.MatchParent,
				ViewGroup.LayoutParams.WrapContent);
		pageLayout.AddView(buttonLayout, layoutParams);

		adapterCmd = -1;
	}

	public void DestroyLayout(JobReader.PageInfo pageInfo) {
		buttonBlockSize = null;
		buttonSepTime0 = null;
		buttonSepTime1 = null;
		buttonCan500 = null;
		buttonCan100 = null;
		buttonCanOff = null;
		//Android.Util.Log.Info("Custom", "Destroyed");
	}

	public void UpdateLayout(JobReader.PageInfo pageInfo, bool pageValid, bool threadActive) {
		if ((buttonCan500 == null) || (buttonCan100 == null) || (buttonCanOff == null)) {
			return;
		}

		bool enabled = pageValid && threadActive;

		buttonBlockSize.Enabled = enabled;
		buttonSepTime0.Enabled  = enabled;
		buttonSepTime1.Enabled  = enabled;
		buttonCan500.Enabled    = enabled;
		buttonCan100.Enabled    = enabled;
		buttonCanOff.Enabled    = enabled;
	}

	public void ExecuteJob(EdiabasNet ediabas, ref Dictionary<string, EdiabasNet.ResultData> resultDict, bool firstCall) {
		if (firstCall) {
			adapterCmd = -1;
		}
		if (adapterCmd >= 0) {
			ediabas.ArgString = string.Format("0x{0:X02};0x{1:X02}", adapterCmd, adapterValue);
			ediabas.ArgBinaryStd = null;
			ediabas.ResultsRequests = string.Empty;
			adapterCmd = -1;

			ediabas.ExecuteJob("ADAPTER_CMD");

			List<Dictionary<string, EdiabasNet.ResultData>> resultSets = ediabas.ResultSets;
			if (resultSets != null && resultSets.Count >= 2)
			{
				EdiabasThread.MergeResultDictionarys(ref resultDict, resultSets[1], "SET_CAN");
			}
		}

		int index = 0;
		foreach (EdiabasJob job in jobArray) {
			ediabas.ArgString = job.JobArgs;
			ediabas.ArgBinaryStd = null;
			ediabas.ResultsRequests = job.ResultRequests;

			ediabas.ExecuteJob(job.JobName);

			List<Dictionary<string, EdiabasNet.ResultData>> resultSets = ediabas.ResultSets;
			if (resultSets != null && resultSets.Count >= 2) {
				EdiabasThread.MergeResultDictionarys(ref resultDict, resultSets[1], string.Format("{0}_", index));
			}

			index++;
		}
	}

	public string FormatResult(JobReader.PageInfo pageInfo, Dictionary<string, EdiabasNet.ResultData> resultDict, string resultName) {
		string result = string.Empty;
		bool found;

		switch (resultName)
		{
			case "0_RESPONSE":
				{
					Int64 value = ActivityMain.GetResultInt64(resultDict, resultName, out found);
					if (found)
					{
						if ((value & 0x01) != 0)
						{
							result = ActivityMain.GetPageString(pageInfo, "adapter_ignition_on");
						}
						else
						{
							result = ActivityMain.GetPageString(pageInfo, "adapter_ignition_off");
						}
						if ((value & 0x80) != 0)
						{
							result = "(" + result + ")";
						}
					}
					break;
				}

			case "3_RESPONSE":
				{
					Int64 value = ActivityMain.GetResultInt64(resultDict, resultName, out found);
					if (found)
					{
						switch (value)
						{
							case 0:
								result = ActivityMain.GetPageString(pageInfo, "button_adapter_config_can_disp_off");
								break;

							case 1:
								result = ActivityMain.GetPageString(pageInfo, "button_adapter_config_can_disp_500");
								break;

							case 9:
								result = ActivityMain.GetPageString(pageInfo, "button_adapter_config_can_disp_100");
								break;

							default:
								result = string.Format(ActivityMain.Culture, "{0}", value);
								break;
						}
					}
					break;
				}
		}
		return result;
	}
}
]]>
		</code>
	</page>
</fragment>
