<?xml version="1.0" encoding="utf-8" ?>
<fragment xmlns="http://www.holeschak.de/BmwDeepObd"
          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:schemaLocation="http://www.holeschak.de/BmwDeepObd BmwDeepObd.xsd">
  <page name ="tab_adapter_config">
    <strings>
      <string name="tab_adapter_config">Intf</string>
      <string name="button_adapter_config_can_500">500 kbit/s D-CAN</string>
      <string name="button_adapter_config_can_100">100 kbit/s K-CAN</string>
      <string name="button_adapter_config_can_off">CAN off</string>
      <string name="adapter_config_error">Configuration failed</string>
      <string name="adapter_config_ok">Configuration successful</string>
    </strings>
    <jobs sgbd="adapter_prg" />
    <code show_warnings="true">
      <![CDATA[
    class PageClass
    {
        private Button buttonCan500;
        private Button buttonCan100;
        private Button buttonCanOff;
        private int adapterConfigValue = -1;
        private int configResult = -1;

        public void CreateLayout(ActivityMain activity, JobReader.PageInfo pageInfo, LinearLayout pageLayout)
        {
            LinearLayout buttonLayout = new LinearLayout(activity);
            buttonLayout.Orientation = Orientation.Vertical;

            LinearLayout.LayoutParams buttonLayoutParams = new LinearLayout.LayoutParams(
                ViewGroup.LayoutParams.MatchParent,
                ViewGroup.LayoutParams.WrapContent);
            buttonLayoutParams.Weight = 1;

            buttonCan500 = new Button(activity);
            buttonCan500.Text = ActivityMain.GetPageString(pageInfo, "button_adapter_config_can_500");
            buttonCan500.Click += delegate
            {
                adapterConfigValue = 0x01;
                configResult = -1;
            };
            buttonLayout.AddView(buttonCan500, buttonLayoutParams);

            buttonCan100 = new Button(activity);
            buttonCan100.Text = ActivityMain.GetPageString(pageInfo, "button_adapter_config_can_100");
            buttonCan100.Click += delegate
            {
                adapterConfigValue = 0x09;
                configResult = -1;
            };
            buttonLayout.AddView(buttonCan100, buttonLayoutParams);

            buttonCanOff = new Button(activity);
            buttonCanOff.Text = ActivityMain.GetPageString(pageInfo, "button_adapter_config_can_off");
            buttonCanOff.Click += delegate
            {
                adapterConfigValue = 0x00;
                configResult = -1;
            };
            buttonLayout.AddView(buttonCanOff, buttonLayoutParams);

            LinearLayout.LayoutParams layoutParams = new LinearLayout.LayoutParams(
                ViewGroup.LayoutParams.MatchParent,
                ViewGroup.LayoutParams.WrapContent);
            pageLayout.AddView(buttonLayout, layoutParams);

            adapterConfigValue = -1;
            configResult = -1;
        }

        public void DestroyLayout(JobReader.PageInfo pageInfo)
        {
            if (buttonCan500 != null)
            {
                buttonCan500.Dispose();
                buttonCan500 = null;
            }
            if (buttonCan100 != null)
            {
                buttonCan100.Dispose();
                buttonCan100 = null;
            }
            if (buttonCanOff != null)
            {
                buttonCanOff.Dispose();
                buttonCanOff = null;
            }
            //Android.Util.Log.Info("Custom", "Destroyed");
        }

        public void UpdateLayout(JobReader.PageInfo pageInfo, bool pageValid, bool threadActive)
        {
            if ((buttonCan500 == null) || (buttonCan100 == null) || (buttonCanOff == null))
            {
                return;
            }

            if (pageValid && threadActive)
            {
                buttonCan500.Enabled = true;
                buttonCan100.Enabled = true;
                buttonCanOff.Enabled = true;
            }
            else
            {
                buttonCan500.Enabled = false;
                buttonCan100.Enabled = false;
                buttonCanOff.Enabled = false;
            }
        }

        public void ExecuteJob(EdiabasNet ediabas, ref Dictionary<string, EdiabasNet.ResultData> resultDict, bool firstCall)
        {
            if (firstCall)
            {
                adapterConfigValue = -1;
            }
            if (adapterConfigValue < 0)
            {
                Thread.Sleep (500);
                return;
            }

            byte adapterConfig = (byte)adapterConfigValue;
            adapterConfigValue = -1;
            configResult = -1;

            ediabas.ArgString = string.Format("0x{0:X02}", adapterConfig);
            ediabas.ArgBinaryStd = null;
            ediabas.ResultsRequests = string.Empty;

            ediabas.ExecuteJob("ADAPTER_PRG");

            List<Dictionary<string, EdiabasNet.ResultData>> resultSets = ediabas.ResultSets;
            if (resultSets != null && resultSets.Count >= 2)
            {
                EdiabasNet.ResultData resultData;
                if (resultSets[1].TryGetValue("DONE", out resultData))
                {
                    if (resultData.OpData is Int64)
                    {
                        configResult = (int)((Int64)resultData.OpData);
                    }
                }
            }
        }

        public void UpdateResultList(JobReader.PageInfo pageInfo, MultiMap<string, EdiabasNet.ResultData> resultDict, List<TableResultItem> resultList)
        {
            int result = configResult;

            if (result > 0)
            {
                resultList.Add(new TableResultItem(ActivityMain.GetPageString(pageInfo, "adapter_config_ok"), null));
            }
            else if (result == 0)
            {
                resultList.Add(new TableResultItem(ActivityMain.GetPageString(pageInfo, "adapter_config_error"), null));
            }
        }
    }
      ]]>
    </code>
  </page>
</fragment>
